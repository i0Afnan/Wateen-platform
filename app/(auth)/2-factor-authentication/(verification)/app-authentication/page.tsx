'use client';

import Back from '@/app/(auth)/forget-password/icon/back';
import CustomButton from '@/app/components/ui/customButton';
import CustomLink from '@/app/components/ui/customLink';
import CustomTextField from '@/app/components/ui/customTextField';
import { Alert, Box, Stack, Typography } from '@mui/material';
import axios from 'axios';
import { useRouter } from 'next/navigation';
import { useState } from 'react';
import Cookies from 'js-cookie';
import * as yup from 'yup';
import { useFormik } from 'formik';

const validationSchema = yup.object({
  password: yup.string().required('Password is required').min(6).max(6),
});

const AuthenticatorApp = () => {
  const [alert, setAlert] = useState('');

  const { push } = useRouter();

  const formik = useFormik({
    initialValues: {
      password: '',
    },
    validationSchema: validationSchema,
    onSubmit: (values) => {
      handleFormData(values);
    },
  });

  const handleFormData = async (values: any) => {
    const url = 'https://api-qa.wateen.io/api/v1/Authorize/LoginWith2FAAPP';
    const data = {
      username: Cookies.get('username'),
      password: Cookies.get('password'),
      otp: values.password,
    };
    console.log(JSON.stringify(data));

    try {
      const res = await axios.post(url, JSON.stringify(data), {
        headers: { 'Content-Type': 'application/json', accept: '*/*' },
      });
      if (res.status !== 200) {
        throw new Error(res.status + ': Authentication failed');
      }

      Cookies.set('refreshToken', res.data.token_info.refresh_token);
      push('/dashboard');
    } catch (err) {
      setAlert('Incorrect OTP');
      console.error(err);
    }
  };

  return (
    <Stack gap={1}>
      <Stack
        display="flex"
        flexDirection="row"
        alignItems="center"
        gap={2}
        mb={4}
        component={CustomLink}
        href="/2-factor-authentication"
      >
        <Back />
        <Typography fontWeight="700">Change 2FA method</Typography>
      </Stack>

      <Box display="flex" gap={1} flexDirection={{ xs: 'column', sm: 'row', md: 'row' }}>
        <Typography fontSize={25} variant="h2" fontWeight={700} color="primary.main">
          Mobile app
        </Typography>
        <Typography fontSize={25} variant="h2" color="#000000" fontWeight={500}>
          authenticator setup
        </Typography>
      </Box>
      <Typography>Enter the 6-digit code generated by your app to confirm your action.</Typography>

      <Stack mt="2rem" gap="2rem">
        <form onSubmit={formik.handleSubmit}>
          <Stack gap="1rem">
            <CustomTextField
              fullWidth
              id="password"
              name="password"
              placeholder="Enter your OTP"
              value={formik.values.password}
              onChange={formik.handleChange}
              error={formik.touched.password && Boolean(formik.errors.password)}
              helperText={formik.touched.password && formik.errors.password}
            />
            <CustomButton
              label="Verify"
              fullWidth
              type="submit"
              variant="contained"
              color="#ffffff"
            />
          </Stack>
        </form>
        {alert && <Alert severity="error">{alert}</Alert>}
      </Stack>
    </Stack>
  );
};

export default AuthenticatorApp;
